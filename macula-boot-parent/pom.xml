<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.6</version>
        <relativePath/>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>dev.macula.boot</groupId>
    <artifactId>macula-boot-parent</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <description>Based on Spring Boot and Spring Cloud dependencies</description>
    <url>https://macula.dev</url>

    <properties>
        <revision>5.0.0-SNAPSHOT</revision>
        <java.version>1.8</java.version>
        <resource.delimiter>@</resource.delimiter>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <spring-boot.version>2.7.6</spring-boot.version>
        <spring-cloud.version>2021.0.3</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.0.1.0</spring-cloud-alibaba.version>
        <spring-cloud-tencent.version>1.6.0-2021.0.3</spring-cloud-tencent.version>
        <spring-statemachine.version>3.2.0</spring-statemachine.version>
        <mysql.connector.version>8.0.29</mysql.connector.version>
        <druid.version>1.2.8</druid.version>
        <mybatis.plus.version>3.5.2</mybatis.plus.version>
        <mybatis.mate.version>1.1.3</mybatis.mate.version>
        <redisson.version>3.18.1</redisson.version>
        <kryo.version>5.3.0</kryo.version>
        <hutool.version>5.7.20</hutool.version>
        <liteflow.version>2.8.0</liteflow.version>
        <oauth2-oidc-sdk.version>9.19</oauth2-oidc-sdk.version>
        <resilience4j.version>1.7.1</resilience4j.version>
        <swagger2.version>1.6.2</swagger2.version>
        <swagger3.version>2.2.0</swagger3.version>
        <mapstruct.version>1.5.2.Final</mapstruct.version>
        <lock4j.version>2.2.1</lock4j.version>
        <skywalking.version>8.11.0</skywalking.version>
        <rocketmq-spring.version>2.2.2</rocketmq-spring.version>
        <springdoc.version>1.6.9</springdoc.version>
        <powerjob.version>4.0.1</powerjob.version>
        <dubbo.version>2.7.16</dubbo.version>
        <bouncycastle.version>1.71.1</bouncycastle.version>
        <aliyun-sdk-oss.version>3.15.1</aliyun-sdk-oss.version>
        <qcloud-sdk-oss.version>5.6.99</qcloud-sdk-oss.version>
        <aws-sdk-oss.version>1.12.289</aws-sdk-oss.version>
        <minio.version>8.4.2</minio.version>
        <tika.version>2.4.1</tika.version>
        <mysql-binlog-connector.version>0.27.1</mysql-binlog-connector.version>
        <redis-replicator.version>3.6.4</redis-replicator.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- spring-statemachine -->
            <dependency>
                <groupId>org.springframework.statemachine</groupId>
                <artifactId>spring-statemachine-bom</artifactId>
                <version>${spring-statemachine.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring-cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring cloud alibaba -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring cloud tencent -->
            <dependency>
                <groupId>com.tencent.cloud</groupId>
                <artifactId>spring-cloud-tencent-dependencies</artifactId>
                <!--version number-->
                <version>${spring-cloud-tencent.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- macula -->
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-commons</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-tinyid</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-mybatis-plus</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-redis</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-cache</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-leaderelection</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-lock4j</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-idempotent</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-web</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-liteflow</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-statemachine</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-mapstruct</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-springdoc</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-security</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-skywalking</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-rocketmq</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-oss</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-powerjob</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-cloud-feign</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-cloud-gateway</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-cloud-alibaba</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-cloud-alibaba-scg</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-cloud-tencent</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-cloud-tencent-scg</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-cloud-tsf</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>dev.macula.boot</groupId>
                <artifactId>macula-boot-starter-cloud-tsf-scg</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- MySQL Connector -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>

            <!-- Druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- mybastis plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>

            <!-- lock4j -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>lock4j-redisson-spring-boot-starter</artifactId>
                <version>${lock4j.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.redisson</groupId>
                        <artifactId>redisson-spring-boot-starter</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- HuTool -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-core</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-json</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-crypto</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <dependency>
                <groupId>com.yomahub</groupId>
                <artifactId>liteflow-spring-boot-starter</artifactId>
                <version>${liteflow.version}</version>
            </dependency>

            <!-- redisson -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-data-26</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>

            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>oauth2-oidc-sdk</artifactId>
                <version>${oauth2-oidc-sdk.version}</version>
            </dependency>

            <!-- resilience4j -->
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-circuitbreaker</artifactId>
                <version>${resilience4j.version}</version>
            </dependency>

            <!-- Swagger2 -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger2.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger3.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <!-- mapstruct -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- skywalking -->
            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-trace</artifactId>
                <version>${skywalking.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.skywalking</groupId>
                <artifactId>apm-toolkit-logback-1.x</artifactId>
                <version>${skywalking.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${rocketmq-spring.version}</version>
            </dependency>

            <!-- PowerJob -->
            <dependency>
                <groupId>tech.powerjob</groupId>
                <artifactId>powerjob-worker-spring-boot-starter</artifactId>
                <version>${powerjob.version}</version>
            </dependency>

            <!-- Dubbo -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.version}</version>
            </dependency>

            <!-- Bouncy Castle -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>

            <!-- file storage -->
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-sdk-oss.version}</version>
            </dependency>

            <dependency>
                <groupId>com.qcloud</groupId>
                <artifactId>cos_api</artifactId>
                <version>${qcloud-sdk-oss.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId>
                <version>${tika.version}</version>
            </dependency>

            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-s3</artifactId>
                <version>${aws-sdk-oss.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <licenses>
        <license>
            <name>The Apache License</name>
            <url>https://apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>rainsoft</name>
            <email>rainsoft@163.com</email>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:macula-projects/macula-boot.git</connection>
        <developerConnection>scm:git:git@github.com:macula-projects/macula-boot.git</developerConnection>
        <url>https://github.com/macula-projects/macula-boot</url>
    </scm>

    <!-- snapshotRepository与repository中的id一定要与maven setting.xml中server的id保持一致！ -->
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.8</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.2.1</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.1</version>
                        <configuration>
                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- Prevent `gpg` from using pinentry programs -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>flatten-maven-plugin</artifactId>
                        <!--<version>1.2.7</version>-->
                        <configuration>
                            <!-- 避免IDE将 .flattened-pom.xml 自动识别为功能模块 -->
                            <flattenedPomFilename>flattened.xml</flattenedPomFilename>
                            <updatePomFile>true</updatePomFile>
                            <flattenMode>resolveCiFriendliesOnly</flattenMode>
                        </configuration>
                        <executions>
                            <execution>
                                <id>flatten</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>flatten</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>flatten.clean</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>